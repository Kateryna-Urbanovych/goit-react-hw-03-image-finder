{"version":3,"sources":["components/Searchbar/Searchbar.js","components/SearchForm/SearchForm.js","servises/pixabay-api.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/LoaderSpinner/LoaderSpinner.js","components/SearchInfo/SearchInfo.js","App.js","index.js"],"names":["Searchbar","children","className","SearchForm","state","imageValue","handleImageValueChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","info","props","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","PureComponent","pixabayAPI","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","tag","largeImageURL","createPortal","onClick","src","alt","ImageGalleryItem","showModal","toggleModal","webformatURL","ImageGallery","images","map","id","Button","LoaderSpinner","color","height","width","SearchInfo","status","error","updatePage","console","log","prevState","scroll","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","prevImageValue","nextImageValue","hits","length","catch","message","App","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b8ef33f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Searchbar({ children }) {\r\n    return <header className=\"Searchbar\">{children}</header>;\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Searchbar;\r\n","import { PureComponent } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass SearchForm extends PureComponent {\r\n    state = {\r\n        imageValue: '',\r\n    };\r\n\r\n    handleImageValueChange = event => {\r\n        this.setState({ imageValue: event.currentTarget.value.toLowerCase() });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.imageValue.trim() === '') {\r\n            return toast.info('Please, write some request');\r\n        }\r\n\r\n        this.props.onSubmit(this.state.imageValue);\r\n        // По превью дз запрос остается!!!\r\n        // this.setState({ imageValue: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    value={this.state.imageValue}\r\n                    onChange={this.handleImageValueChange}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchForm;\r\n","function fetchImage(imageValue, page) {\r\n    return fetch(\r\n        `https://pixabay.com/api/?q=${imageValue}&page=${page}&key=18986249-8b68234fd669e826bdba5acf0&image_type=photo&orientation=horizontal&per_page=12`,\r\n    ).then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        return Promise.reject(\r\n            new Error(`No images found on request ${imageValue}`),\r\n        );\r\n    });\r\n}\r\n\r\nconst pixabayAPI = {\r\n    fetchImage,\r\n};\r\n\r\nexport default pixabayAPI;\r\n","import { PureComponent } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends PureComponent {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (event.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleOverlayClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { tag, largeImageURL } = this.props;\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={largeImageURL} alt={tag} />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import { PureComponent } from 'react';\r\nimport Modal from '../Modal';\r\n\r\nclass ImageGalleryItem extends PureComponent {\r\n    state = {\r\n        showModal: false,\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState(({ showModal }) => ({\r\n            showModal: !showModal,\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { showModal } = this.state;\r\n        const { webformatURL, tag, largeImageURL } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <img\r\n                    src={webformatURL}\r\n                    alt={tag}\r\n                    className=\"ImageGalleryItem-image\"\r\n                    onClick={this.toggleModal}\r\n                />\r\n                {showModal && (\r\n                    <Modal\r\n                        onClose={this.toggleModal}\r\n                        tag={tag}\r\n                        largeImageURL={largeImageURL}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nfunction ImageGallery({ images }) {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {images.map(({ id, webformatURL, tag, largeImageURL }) => (\r\n                <li key={id} className=\"ImageGalleryItem\">\r\n                    <ImageGalleryItem\r\n                        webformatURL={webformatURL}\r\n                        tag={tag}\r\n                        largeImageURL={largeImageURL}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ImageGallery;\r\n","function Button({ onClick }) {\r\n    return (\r\n        <button onClick={onClick} type=\"button\" className=\"Button\">\r\n            Load more\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import { PureComponent } from 'react';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nclass LoaderSpinner extends PureComponent {\r\n    render() {\r\n        return (\r\n            <Loader\r\n                type=\"BallTriangle\"\r\n                color=\"#3f51b5\"\r\n                height={200}\r\n                width={200}\r\n                className=\"loaderSpinner\"\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoaderSpinner;\r\n","import { PureComponent } from 'react';\r\n\r\nimport pixabayAPI from '../../servises/pixabay-api';\r\nimport ImageGallery from '../ImageGallery';\r\nimport Button from '../Button';\r\nimport LoaderSpinner from '../LoaderSpinner';\r\n\r\nclass SearchInfo extends PureComponent {\r\n    state = {\r\n        status: 'idle',\r\n        images: [],\r\n        error: null,\r\n        page: 1,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const prevImageValue = prevProps.imageValue;\r\n        const nextImageValue = this.props.imageValue;\r\n        const { page } = this.state;\r\n\r\n        // console.log(this.state.page);\r\n\r\n        if (prevImageValue !== nextImageValue || prevState.page !== page) {\r\n            this.setState({ status: 'pending' });\r\n\r\n            if (prevImageValue !== nextImageValue) {\r\n                this.setState({\r\n                    images: [],\r\n                    page: 1,\r\n                });\r\n            }\r\n\r\n            pixabayAPI\r\n                .fetchImage(nextImageValue, page)\r\n                .then(images => {\r\n                    console.log('images.hits', images.hits);\r\n                    // console.log('this.state.images', this.state.images);\r\n\r\n                    if (images.hits.length === 0) {\r\n                        return Promise.reject(\r\n                            new Error(\r\n                                `No images found on request ${nextImageValue}`,\r\n                            ),\r\n                        );\r\n                    }\r\n\r\n                    this.setState(prevState => ({\r\n                        images: [...prevState.images, ...images.hits],\r\n                        status: 'resolved',\r\n                    }));\r\n\r\n                    // Как-то ненормально перематывается!!!\r\n                    this.scroll();\r\n                })\r\n                .catch(error => this.setState({ error, status: 'rejected' }));\r\n        }\r\n    }\r\n\r\n    updatePage = () => {\r\n        console.log(this.state.page);\r\n\r\n        this.setState(prevState => ({\r\n            page: prevState.page + 1,\r\n        }));\r\n    };\r\n\r\n    scroll = () => {\r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight - 1500,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { status, error, images } = this.state;\r\n\r\n        if (status === 'idle') {\r\n            return <p className=\"idleText\">What are we looking for?</p>;\r\n        }\r\n\r\n        if (status === 'pending') {\r\n            return <LoaderSpinner />;\r\n        }\r\n\r\n        if (status === 'resolved') {\r\n            // console.log(images);\r\n            return (\r\n                <>\r\n                    <ImageGallery images={images} />\r\n                    <Button onClick={this.updatePage} />\r\n                </>\r\n            );\r\n        }\r\n\r\n        if (status === 'rejected') {\r\n            return <p className=\"rejectedText\">{error.message}</p>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default SearchInfo;\r\n","import { PureComponent } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport SearchForm from './components/SearchForm';\nimport SearchInfo from './components/SearchInfo';\n\nclass App extends PureComponent {\n    state = {\n        imageValue: '',\n    };\n\n    handleFormSubmit = imageValue => {\n        this.setState({ imageValue });\n    };\n\n    render() {\n        return (\n            <>\n                <ToastContainer />\n                <Searchbar>\n                    <SearchForm onSubmit={this.handleFormSubmit} />\n                </Searchbar>\n                <SearchInfo imageValue={this.state.imageValue} />\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}